/*
 * WariationsJPanel.java
 *
 * Created on March 18, 2008, 4:10 PM
 */

package myfractals;

import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.TableModel;
/**
 *
 * @author  victories
 */
public class WariationsJPanel extends javax.swing.JPanel {
    
    /** Creates new form WariationsJPanel */
    public WariationsJPanel() {
        initComponents();
        
        ustawParametryJButton.setVisible(false);
        
        ListSelectionModel lsm = wariationsJTable.getSelectionModel();
        lsm.addListSelectionListener(new WariationJTableListSelectionHandler());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wariationsTableJScrollPane = new javax.swing.JScrollPane();
        wariationsJTable = new javax.swing.JTable();
        parametersTextFieldsPanel = new myfractals.TextFieldsPanel();
        ustawParametryJButton = new javax.swing.JButton();

        wariationsJTable.setModel(new WariationsTableModel());
        wariationsTableJScrollPane.setViewportView(wariationsJTable);

        ustawParametryJButton.setText("Ustaw parametry");
        ustawParametryJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ustawParametryJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(wariationsTableJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(ustawParametryJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(parametersTextFieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(parametersTextFieldsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ustawParametryJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(wariationsTableJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ustawParametryJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ustawParametryJButtonActionPerformed
        try {
            wariationsJTable.getModel().setValueAt(parametersTextFieldsPanel.getTextFieldsValues(), 
                    wariationsJTable.getSelectedRow(), 0);
        } catch (Exception ex) {//GEN-LAST:event_ustawParametryJButtonActionPerformed
            JOptionPane.showInternalMessageDialog(this.getParent().getParent(), 
                    ex.getMessage(), 
                    "Uwaga", JOptionPane.WARNING_MESSAGE);
        }
    }                                                     
    
    /**
     * Funkcja zwracaj¹ca wybrane przez u¿ytkownika wariacje. Wybrane przez
     * u¿ytkownika wariacje, to wariacje, dla których u¿ytkownik ustawi³
     * wartoœæ wspó³czynnika wiêksz¹ od zera.
     * @return Obiekt typu Vector<IWariation> zawieraj¹cy wariacje wybrane przez
     * u¿ytkownika
     * @throws java.lang.Exception 
     */
    public Vector<IWariation> getWariations() throws Exception {
        boolean anyWariation = false;
        Vector<IWariation> wariations = new Vector<IWariation>();
        WariationsTableModel tableModel = (WariationsTableModel) wariationsJTable.getModel();
        IWariation temp;
        
        for(int i=0; i<tableModel.getRowCount(); i++) {
            temp = (IWariation)tableModel.getWariation(i);
            if(temp.getCoefficient() != 0.0) {
                anyWariation = true;
                wariations.add(temp);
            }
        }
        if(!anyWariation) {
            throw new Exception("Nie dodano ¿adnej wariacji!");
        }
        return wariations;
    }
    
    /**
     * Ustawia wartoœci w tabeli wed³ug zadanego wektora wariacji
     * @param wariations obiekt typu Vector<IWariations> z wariacjami
     */
    public void setWariations(Vector<IWariation> wariations) {
        ((WariationsTableModel) wariationsJTable.getModel()).clearParameters();
        
        for(IWariation wariation : wariations) {
            wariationsJTable.getModel().setValueAt(wariation.getCoefficient().toString(), 
                                                    WariationsFactory.getWariationNumber(wariation.getWariationName()), 
                                                    1);
            if(wariation.getParametersQuantity() > 0) {
                wariationsJTable.getModel().setValueAt(wariation.getParameters(), 
                                                    WariationsFactory.getWariationNumber(wariation.getWariationName()), 
                                                    0);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private myfractals.TextFieldsPanel parametersTextFieldsPanel;
    private javax.swing.JButton ustawParametryJButton;
    private javax.swing.JTable wariationsJTable;
    private javax.swing.JScrollPane wariationsTableJScrollPane;
    // End of variables declaration//GEN-END:variables
    
    class WariationJTableListSelectionHandler implements ListSelectionListener {
        public void valueChanged(ListSelectionEvent e) {
            ListSelectionModel lsm = (ListSelectionModel) e.getSource();
            if(!lsm.isSelectionEmpty() && e.getValueIsAdjusting()) {
                int parQuantity = WariationsFactory.getWariation(lsm.getMinSelectionIndex(), 0.0).
                        getParametersQuantity();
                if(parQuantity > 0) ustawParametryJButton.setVisible(true);
                else ustawParametryJButton.setVisible(false);
                parametersTextFieldsPanel.valueTextField(parQuantity);
            }
        }
    }
}
