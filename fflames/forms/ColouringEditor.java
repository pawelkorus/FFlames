/*
 * ColouringEditor.java
 *
 * Created on March 21, 2008, 2:25 AM
 */

package fflames.forms;

import java.awt.Color;
import java.util.Vector;

import javax.swing.event.ListSelectionListener;
import fflames.model.ColoringListModel;

import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JPanel;
import javax.swing.BoxLayout;
import java.awt.Component;
import javax.swing.JList;
import javax.swing.ListSelectionModel;
import java.awt.BorderLayout;

/**
 * 
 * @author victories
 */
public class ColouringEditor extends javax.swing.JPanel {
	/**
	 * 
	 */
	private static final long serialVersionUID = -1766888684765540914L;

	/** Creates new form ColouringEditor */
	public ColouringEditor() {
		setLayout(new BoxLayout(this, BoxLayout.X_AXIS));

		JPanel panel = new JPanel();
		panel.setAlignmentY(Component.TOP_ALIGNMENT);
		panel.setAlignmentX(Component.LEFT_ALIGNMENT);
		panel.setBorder(null);
		add(panel);
		panel.setLayout(new BorderLayout(0, 0));

		_list = new JList<String>();
		_list.setAlignmentY(Component.TOP_ALIGNMENT);
		_list.setAlignmentX(Component.LEFT_ALIGNMENT);
		_list.setLayoutOrientation(JList.VERTICAL_WRAP);
		_list.setVisibleRowCount(20);
		_list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		_list.setBorder(null);
		_list.setModel(new ColoringListModel());
		panel.add(_list);

		_buttonsPanel = new JPanel();
		_buttonsPanel.setAlignmentX(Component.RIGHT_ALIGNMENT);
		_buttonsPanel.setAlignmentY(Component.TOP_ALIGNMENT);
		add(_buttonsPanel);
		_buttonsPanel.setLayout(new BoxLayout(_buttonsPanel, BoxLayout.Y_AXIS));
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
	}// </editor-fold>//GEN-END:initComponents

	public void addListSelectionListener(ListSelectionListener listener) {
		_list.addListSelectionListener(listener);
	}

	public void removeListSelectionListener(ListSelectionListener listener) {
		_list.removeListSelectionListener(listener);
	}

	public void setNumberOfColorSlots(int value) {
		_buttonsPanel.removeAll();

		for (int i = 0; i < value; i++) {
			JButton btn = new JButton("Choose color");
			btn.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					((JButton) evt.getSource()).setBackground(JColorChooser.showDialog(null, "Choose color", null));
				}
			});
			_buttonsPanel.add(btn);
		}

		validate();
	}

	public Vector<Color> getSelectedColors() {
		Vector<Color> colors = new Vector<Color>();
		for (int i = 0; i < _buttonsPanel.getComponentCount(); i++) {
			JButton btn = (JButton) _buttonsPanel.getComponent(i);
			colors.add(btn.getBackground());
		}
		return colors;
	}

	public int getSelectedIndex() {
		return _list.getSelectedIndex();
	}

	public int functionsCount = 0;
	private JList<String> _list;
	private JPanel _buttonsPanel;

	protected JList<String> getList() {
		return _list;
	}

	protected JPanel getButtonsPanel() {
		return _buttonsPanel;
	}
}
